"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@oclif/core");
const chalk = require("chalk");
const errors_1 = require("@oclif/core/lib/errors");
const zcli_core_1 = require("@zendesk/zcli-core");
const helpMessage_1 = require("../../utils/helpMessage");
class Remove extends core_1.Command {
    async run() {
        const { args } = await this.parse(Remove);
        const { subdomain } = args;
        const secureStore = new zcli_core_1.SecureStore();
        const keytar = await secureStore.loadKeytar();
        if (!keytar) {
            console.log(chalk.yellow('Failed to load secure credentials store: could not remove profile.'), helpMessage_1.HELP_ENV_VARS);
            return;
        }
        const deleted = await secureStore.deletePassword(subdomain);
        if (!deleted)
            throw new errors_1.CLIError(chalk.red(`Profile ${subdomain} not found.`));
        console.log(chalk.green(`Removed ${subdomain} profile.`));
    }
}
exports.default = Remove;
Remove.description = 'removes a profile';
Remove.args = [
    { name: 'subdomain', required: true }
];
Remove.examples = [
    '$ zcli profiles:remove [SUBDOMAIN]'
];
