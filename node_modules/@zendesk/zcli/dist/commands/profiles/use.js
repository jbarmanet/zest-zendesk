"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@oclif/core");
const chalk = require("chalk");
const zcli_core_1 = require("@zendesk/zcli-core");
const helpMessage_1 = require("../../utils/helpMessage");
class Remove extends core_1.Command {
    async run() {
        var _a;
        const { args } = await this.parse(Remove);
        const { subdomain } = args;
        const secureStore = new zcli_core_1.SecureStore();
        const keytar = await secureStore.loadKeytar();
        if (!keytar) {
            console.log(chalk.yellow(`Failed to load secure credentials store: could not switch to ${subdomain} profile.`), helpMessage_1.HELP_ENV_VARS);
            return;
        }
        const auth = new zcli_core_1.Auth({ secureStore });
        const profiles = await auth.getSavedProfiles();
        if (profiles && profiles.length) {
            const profileExists = !!((_a = profiles.filter(({ account }) => account === subdomain)) === null || _a === void 0 ? void 0 : _a.length);
            if (profileExists) {
                await auth.setLoggedInProfile(subdomain);
                console.log(chalk.green(`Switched to ${subdomain} profile.`));
            }
            else {
                console.log(chalk.red(`Failed to find ${subdomain} profile.`));
            }
        }
        else {
            console.log(chalk.red(`Failed to find ${subdomain} profile.`));
        }
    }
}
exports.default = Remove;
Remove.description = 'switches to a profile';
Remove.args = [
    { name: 'subdomain', required: true }
];
Remove.examples = [
    '$ zcli profiles:use [SUBDOMAIN]'
];
