"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setConfig = exports.getAllConfigs = void 0;
const path = require("path");
const fs = require("fs-extra");
const chalk = require("chalk");
const errors_1 = require("@oclif/core/lib/errors");
const constants_1 = require("../constants");
const getAllConfigs = (appPath, configFileName = constants_1.DEFAULT_APPS_CONFIG_FILE) => {
    const configFilePath = path.join(appPath, configFileName);
    if (fs.existsSync(configFilePath)) {
        const zcliConfigFile = fs.readFileSync(configFilePath, 'utf8');
        try {
            return JSON.parse(zcliConfigFile);
        }
        catch (error) {
            throw new errors_1.CLIError(chalk.red(`zcli configuration file was malformed at path: ${configFilePath}`));
        }
    }
};
exports.getAllConfigs = getAllConfigs;
const setConfig = async (key, value, appPath) => {
    const configPath = `${path.resolve(appPath)}/zcli.apps.config.json`;
    if (!await fs.pathExists(configPath)) {
        await fs.outputJson(configPath, { [key]: value });
    }
    else {
        const config = await fs.readJson(configPath) || {};
        config[key] = value;
        await fs.outputJson(configPath, config);
    }
};
exports.setConfig = setConfig;
