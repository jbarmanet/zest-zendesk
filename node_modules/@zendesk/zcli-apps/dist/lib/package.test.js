"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const test_1 = require("@oclif/test");
const package_1 = require("./package");
const fs = require("fs-extra");
const zcli_core_1 = require("@zendesk/zcli-core");
describe('package', () => {
    describe('validatePkg', () => {
        test_1.test
            .stub(fs, 'pathExistsSync', () => true)
            .stub(zcli_core_1.request, 'requestAPI', () => Promise.resolve({ status: 200 }))
            .it('should return true if package is valid', async () => {
            (0, test_1.expect)(await (0, package_1.validatePkg)('./app-path')).to.equal(true);
        });
        test_1.test
            .stub(fs, 'pathExistsSync', () => true)
            .stub(zcli_core_1.request, 'requestAPI', () => Promise.resolve({ status: 400, data: { description: 'invalid location' } }))
            .do(async () => {
            await (0, package_1.validatePkg)('./app-path');
        })
            .catch('invalid location')
            .it('should throw if package has validation errors');
        test_1.test
            .stub(fs, 'pathExistsSync', () => false)
            .do(async () => {
            await (0, package_1.validatePkg)('./bad-path');
        })
            .catch('Package not found at ./bad-path')
            .it('should throw if app path is invalid');
    });
});
