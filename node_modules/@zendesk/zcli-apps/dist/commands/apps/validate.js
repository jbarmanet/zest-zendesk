"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@oclif/core");
const fs = require("fs-extra");
const path = require("path");
const chalk = require("chalk");
const package_1 = require("../../lib/package");
const appPath_1 = require("../../lib/appPath");
class Validate extends core_1.Command {
    async run() {
        const { args } = await this.parse(Validate);
        const { appDirectory } = args;
        (0, appPath_1.validateAppPath)(appDirectory);
        const appPath = path.resolve(appDirectory);
        const pkgPath = await (0, package_1.createAppPkg)(appPath);
        try {
            await (0, package_1.validatePkg)(pkgPath);
            this.log(chalk.green('No validation errors'));
        }
        catch (error) {
            this.error(chalk.red(error));
        }
        // clean up
        if (pkgPath)
            await fs.remove(pkgPath);
    }
}
exports.default = Validate;
Validate.description = 'validates your app';
Validate.args = [
    { name: 'appDirectory', default: '.', required: true, description: 'app path where manifest.json exists' }
];
Validate.examples = [
    '$ zcli apps:validate .',
    '$ zcli apps:validate ./app1'
];
